<launch>
  <arg name="robot_id" value="$(optenv ROBOT_ID unnamed_robot)"/>

  <!-- Arguments for the launch file -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model"
       default="$(find robot_omni4_description)/urdf/robot_omni4.urdf.xacro"/>

  <!-- Launch an empty world on Gazebo -->
  <include file="$(dirname)/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <group ns="$(arg robot_id)/robot_omni4_gazebo_driver">
    <!-- Load the URDF into ROS parameter server -->
    <param name="robot_description"
          command="$(find xacro)/xacro $(arg model) --inorder
                   tf_ns:=$(arg robot_id)/
                   odom_topic_id:=gz_odom
                   cmd_vel_topic_id:=gz_cmd_vel
                   odom_frame_id:=odom
                   base_footprint_frame_id:=base_footprint
                   base_link_frame_id:=base_link
                   base_length:=0.357
                   base_width:=0.210
                   base_height:=0.090
                   base_dist2gnd:=0.022
                   odom_len_l2r:=0.270
                   odom_len_f2b:=0.265
                   laser_lx:=0.0
                   laser_ly:=0.0
                   laser_lz:=0.1094
                   laser_rr:=0.0
                   laser_rp:=0.0
                   laser_ry:=0.0"/>

    <!-- Spawn model -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
          args="-z 0 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />

    <!-- Publish joint values -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

    <!-- Convert joint states to TF transforms for rviz, etc  -->
    <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="25.0" />
    </node>
  </group>
</launch>
